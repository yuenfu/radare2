#!/bin/bash
set -x

export PATH=${TRAVIS_BUILD_DIR}/install/bin:${PATH}
export LD_LIBRARY_PATH=${TRAVIS_BUILD_DIR}/install/lib/$(uname -m)-linux-gnu:${TRAVIS_BUILD_DIR}/install/lib:${TRAVIS_BUILD_DIR}/install/lib64:${LD_LIBRARY_PATH}
git clone --depth 1 --branch "${R2R_BRANCH}" "${R2R_REPO}" || true # If cloning fails that's not an error: we simply fallback to master.
ls radare2-regressions >/dev/null 2>&1 || git clone --depth 1 --branch "${R2R_DEFAULT_BRANCH}" "${R2R_DEFAULT_REPO}"

if [ "${INSTALL_SYSTEM}" == "meson" ] ; then
    echo "Installing with meson + ninja"

    OPTS=""
    if [ "${R2_SYS_CAPSTONE}" != "" ] ; then
        OPTS="${OPTS} -D use_sys_capstone=${R2_SYS_CAPSTONE}"
    fi
    if [ "${R2_SYS_MAGIC}" != "" ] ; then
        OPTS="${OPTS} -D use_sys_magic=${R2_SYS_MAGIC}"
    fi
    if [ "${R2_SYS_ZLIB}" != "" ] ; then
        OPTS="${OPTS} -D use_sys_zlib=${R2_SYS_ZLIB}"
    fi
    if [ "${R2_SYS_ZIP}" != "" ] ; then
        OPTS="${OPTS} -D use_sys_zip=${R2_SYS_ZIP}"
    fi
    if [ "${R2_SYS_LZ4}" != "" ] ; then
        OPTS="${OPTS} -D use_sys_lz4=${R2_SYS_LZ4}"
    fi
    if [ "${COVERAGE}" == "1" ] ; then
        OPTS="${OPTS} -Db_coverage=true"
    fi

    meson --prefix=${TRAVIS_BUILD_DIR}/install ${OPTS} build || exit 1
    pushd build
    ninja || exit 1
    ninja install || exit 1
    popd
    export PKG_CONFIG_PATH=$(pwd)/build/meson-private:${PKG_CONFIG_PATH}
else
    echo "Installing with acr + make"
    ./configure --prefix=${TRAVIS_BUILD_DIR}/install > /dev/null || exit 1
    make -s -j2 > /dev/null || exit 1
    make install > /dev/null || exit 1
    export PKG_CONFIG_PATH=${TRAVIS_BUILD_DIR}/pkgcfg:${PKG_CONFIG_PATH}
fi
export NOOK=1
export NOREPORT=1
cd radare2-regressions
git remote -v
git branch
git rev-parse HEAD
VERBOSE=1 make -k all || exit 1

if [ "${COVERAGE}" == "1" ] ; then
    cd ../build
    curl -s https://codecov.io/bash > ./codecov.sh
    chmod +x ./codecov.sh
    ./codecov.sh -K -v 2>/dev/null
fi
